[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "protvi"
version = "0.0.1"
#authors = [{name = "EM", email = "me@em.com"}]
description = "A deep generative model for single-cell MS-based proteomics data."
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
dependencies = [
    "scvi-tools>=1.0.3",
    "numpy>=1.21.0",
    "pandas>=2.2.0",
    "scikit-learn>=0.24.2",
    "scanpy>=1.9.6",
    "scipy>=1.12.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.11.2",
    "rpy2>=3.5.16",
    "anndata2ri>=1.3.1",
    "scib-metrics",
    # for notebooks
    "ipykernel>=6.29.4",
    "ipywidgets>=8.1.2",
]

[project.optional-dependencies]
doc = [
    "docutils>=0.8,!=0.18.*,!=0.19.*",
    "sphinx>=4",
    "sphinx-book-theme>=1.0.0",
    "nbsphinx",
    "sphinx-copybutton",
    "myst-nb>=1.1.0",
    "sphinxcontrib-bibtex>=1.0.0",
    "setuptools",  # Until pybtex >0.23.0 releases: https://bitbucket.org/pybtex-devs/pybtex/issues/169/
    "sphinx-autodoc-typehints",
    "sphinxext-opengraph",
]

[tool.ruff]
line-length = 120
lint.select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "TCH",  # Typing imports
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.mypy]
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true
no_strict_optional = true